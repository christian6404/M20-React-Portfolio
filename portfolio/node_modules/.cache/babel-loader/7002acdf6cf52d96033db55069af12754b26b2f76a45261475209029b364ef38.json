{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\bootcamp\\\\M20-React-Portfolio\\\\portfolio\\\\src\\\\pages\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactForm() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const validateForm = () => {\n    const errors = {};\n    if (!name.trim()) {\n      errors.name = \"Name is required\";\n    }\n    if (!email.trim()) {\n      errors.email = \"Email is required\";\n    } else if (!isValidEmail(email)) {\n      errors.email = \"Invalid email address\";\n    }\n    if (!message.trim()) {\n      errors.message = \"Message is required\";\n    }\n    setErrors(errors);\n    return Object.keys(errors).length === 0; // Returns true if there are no errors\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      // Form submission logic goes here\n      // You can make an API call or perform any other action with the form data\n      // Reset the form fields and show a success message if needed\n      setName(\"\");\n      setEmail(\"\");\n      setMessage(\"\");\n      setSubmitted(true);\n    } else {\n      setSubmitted(false);\n    }\n  };\n  const isValidEmail = email => {\n    // Regular expression for email validation\n    const emailRegex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    return emailRegex.test(email);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Thank you for your message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          onBlur: () => {\n            if (!name.trim()) {\n              setErrors(prevErrors => ({\n                ...prevErrors,\n                name: \"Name is required\"\n              }));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          onBlur: () => {\n            if (!email.trim()) {\n              setErrors(prevErrors => ({\n                ...prevErrors,\n                email: \"Email is required\"\n              }));\n            } else if (!isValidEmail(email)) {\n              setErrors(prevErrors => ({\n                ...prevErrors,\n                email: \"Invalid email address\"\n              }));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onBlur: () => {\n            if (!message.trim()) {\n              setErrors(prevErrors => ({\n                ...prevErrors,\n                message: \"Message is required\"\n              }));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactForm, \"5dUfxt13idOMKm9sl/hlMpBMibY=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ContactForm","_s","name","setName","email","setEmail","message","setMessage","errors","setErrors","submitted","setSubmitted","validateForm","trim","isValidEmail","Object","keys","length","handleSubmit","e","preventDefault","emailRegex","test","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","onBlur","prevErrors","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/bootcamp/M20-React-Portfolio/portfolio/src/pages/Contact.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n\r\n    if (!name.trim()) {\r\n      errors.name = \"Name is required\";\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      errors.email = \"Email is required\";\r\n    } else if (!isValidEmail(email)) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n\r\n    if (!message.trim()) {\r\n      errors.message = \"Message is required\";\r\n    }\r\n\r\n    setErrors(errors);\r\n\r\n    return Object.keys(errors).length === 0; // Returns true if there are no errors\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validateForm()) {\r\n      // Form submission logic goes here\r\n      // You can make an API call or perform any other action with the form data\r\n      // Reset the form fields and show a success message if needed\r\n      setName(\"\");\r\n      setEmail(\"\");\r\n      setMessage(\"\");\r\n      setSubmitted(true);\r\n    } else {\r\n      setSubmitted(false);\r\n    }\r\n  };\r\n\r\n  const isValidEmail = (email) => {\r\n    // Regular expression for email validation\r\n    const emailRegex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Contact</h2>\r\n      {submitted && <p>Thank you for your message!</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            onBlur={() => {\r\n              if (!name.trim()) {\r\n                setErrors((prevErrors) => ({\r\n                  ...prevErrors,\r\n                  name: \"Name is required\",\r\n                }));\r\n              }\r\n            }}\r\n          />\r\n          {errors.name && <p>{errors.name}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            onBlur={() => {\r\n              if (!email.trim()) {\r\n                setErrors((prevErrors) => ({\r\n                  ...prevErrors,\r\n                  email: \"Email is required\",\r\n                }));\r\n              } else if (!isValidEmail(email)) {\r\n                setErrors((prevErrors) => ({\r\n                  ...prevErrors,\r\n                  email: \"Invalid email address\",\r\n                }));\r\n              }\r\n            }}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"message\">Message:</label>\r\n          <textarea\r\n            id=\"message\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onBlur={() => {\r\n              if (!message.trim()) {\r\n                setErrors((prevErrors) => ({\r\n                  ...prevErrors,\r\n                  message: \"Message is required\",\r\n                }));\r\n              }\r\n            }}\r\n          ></textarea>\r\n          {errors.message && <p>{errors.message}</p>}\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}